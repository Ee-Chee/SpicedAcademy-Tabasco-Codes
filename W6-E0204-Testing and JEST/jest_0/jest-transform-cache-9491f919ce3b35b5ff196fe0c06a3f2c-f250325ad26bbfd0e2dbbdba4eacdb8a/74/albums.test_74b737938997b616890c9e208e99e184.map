{"version":3,"sources":["albums.test.js"],"names":["jest","mock","getAlbumNames","require","spotify","test","search","mockResolvedValue","albums","items","name","then","albumNames","expect","toEqual","sort"],"mappings":";;AAGAA,KAAKC,IAAL,CAAU,WAAV;;AAHA,MAAM,EAAEC,aAAF,KAAoBC,QAAQ,UAAR,CAA1B;AACA,MAAMC,UAAUD,QAAQ,WAAR,CAAhB,CAIAE,KAAK,uCAAL,EAA8C,MAAM;AAChDD,YAAQE,MAAR,CAAeC,iBAAf,CAAiC;AAC7BC,gBAAQ;AACJC,mBAAO,CACH,EAAEC,MAAM,SAAR,EADG,EAEH,EAAEA,MAAM,SAAR,EAFG,EAGH,EAAEA,MAAM,SAAR,EAHG;AADH;AADqB,KAAjC;AASA,WAAOR,cAAc,WAAd,EAA2BS,IAA3B,CAAgCC,cAAc;AACjDC,eAAOD,UAAP,EAAmBE,OAAnB,CAA2BF,WAAWG,IAAX,EAA3B;AACH,KAFM,CAAP;AAGH,CAbD","file":"albums.test.js","sourcesContent":["const { getAlbumNames } = require(\"./albums\");\nconst spotify = require(\"./spotify\");\n\njest.mock(\"./spotify\");\n\ntest(\"album names are in alphabetical order\", () => {\n    spotify.search.mockResolvedValue({\n        albums: {\n            items: [\n                { name: \"g album\" },\n                { name: \"s album\" },\n                { name: \"b album\" }\n            ]\n        }\n    });\n    return getAlbumNames(\"meat loaf\").then(albumNames => {\n        expect(albumNames).toEqual(albumNames.sort());\n    });\n});\n"]}